# Build system configuration
[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

# Project metadata
[project]
name = "tsplit"
description = "Extract terminal repeats from retrotransposons (LTRs) or DNA transposons (TIRs). Compose synthetic MITES from complete DNA transposons."
readme = "README.md"
requires-python = ">=3.8"
license = { text = "MIT" }
authors = [
    { name = "Adam Taranto" }
]

# Classifiers for project categorization
classifiers = [
    "Programming Language :: Python :: 3",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]

# Project dependencies
dependencies = ["biopython>=1.70", "pymummer>=0.12.0", "tqdm", "rich"]

# Dynamic versioning
dynamic = ["version"]

# Project URLs
[project.urls]
homepage = "https://github.com/adamtaranto/tSplit"
documentation = "https://github.com/adamtaranto/tSplit"
repository = "https://github.com/adamtaranto/tSplit"

# Command-line script entry point
[project.scripts]
tsplit="tsplit.app_tsplit:main"

# Hatch build configuration
[tool.hatch.build]
source = "src"

# Exclude files and directories from the build
exclude = [
    "environment.yml",
    ".github",
    ".vscode",
]

# Hatch versioning configuration
[tool.hatch.version]
source = "vcs"

# Version control system (VCS) versioning
[tool.hatch.version.vcs]
tag-pattern = "v*"  # Git tags starting with 'v' will be used for versioning
fallback-version = "0.0.0"

# Version file location for VCS
[tool.hatch.build.hooks.vcs]
version-file = "src/tsplit/_version.py"

# Optional dependencies for testing
[project.optional-dependencies]
dev = ["hatch", "isort", "mkdocs-jupyter","mkdocs-material", "mkdocs", "mkdocstrings-python", "mkdocstrings", "notebook", "numpydoc-validation", "pre-commit", "pymdown-extensions", "pytest-cov", "pytest", "ruff"]

[tool.pytest.ini_options]
addopts = "-v --cov=tsplit --cov-branch --cov-report=xml --cov-report=term"
testpaths = ["tests"]
python_files = ["test_*.py"]

[tool.ruff]
target-version = "py310"
line-length = 88
fix = true

[tool.ruff.lint]
select = [
    "C",  # mccabe rules
    "F",  # pyflakes rules
    "E",  # pycodestyle error rules
    "W",  # pycodestyle warning rules
    "B",  # flake8-bugbear rules
    "I",  # isort rules
]
ignore = [
    "C901",  # max-complexity-10
    "E501",  # line-too-long
    "I001",  # isort-imports
    "B905",  # `zip()` without an explicit `strict=` parameter
]

[tool.ruff.format]
indent-style = "space"
quote-style = "single"

[tool.isort]
profile = "black"
known_third_party = ["Bio","pymummer"]
known_first_party = ["tsplit"]
default_section = "THIRDPARTY"
force_sort_within_sections = true

[tool.numpydoc_validation]
checks = [
    "all",  # report on all checks
    "ES01", # but don't require an extended summary
    "EX01", # or examples
    "SA01", # or a see also section
    "SS06", # and don't require the summary to fit on one line
]
exclude = [  # don't report on checks for these
    '\.__init__$',
    '\.__repr__$',
    '\.__str__$',
]
override_SS05 = [  # allow docstrings to start with these words
    '^Process ',
    '^Assess ',
    '^Access ',
]
